// <auto-generated />
using System;
using APP_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APPAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230130201917_migracao teste")]
    partial class migracaoteste
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APP_API.Models.Categoria", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Categorias");
                });

            modelBuilder.Entity("APP_API.Models.DetalheOrcamento", b =>
                {
                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("OrcamentoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantProdutos")
                        .HasColumnType("int");

                    b.HasKey("ProdutoId", "OrcamentoId");

                    b.HasIndex("OrcamentoId");

                    b.ToTable("DetalheOrcamento");
                });

            modelBuilder.Entity("APP_API.Models.DetalhePedido", b =>
                {
                    b.Property<int>("PedidoId")
                        .HasColumnType("int");

                    b.Property<int>("ProdutoId")
                        .HasColumnType("int");

                    b.Property<int>("QuantProduto")
                        .HasColumnType("int");

                    b.HasKey("PedidoId", "ProdutoId");

                    b.HasIndex("ProdutoId");

                    b.ToTable("DetalhePedidos");
                });

            modelBuilder.Entity("APP_API.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Apartamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("APP_API.Models.Linha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Linhas");
                });

            modelBuilder.Entity("APP_API.Models.Orcamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("DescricaoServico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("IdentificadorUnico")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<int>("InstaladorId")
                        .HasColumnType("int");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PrecoFinal")
                        .HasColumnType("double");

                    b.Property<double>("PrecoServico")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("IdentificadorUnico")
                        .IsUnique();

                    b.HasIndex("InstaladorId");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("APP_API.Models.Pedido", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("EntregaOpcao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FormaDePagamento")
                        .HasColumnType("int");

                    b.Property<string>("Identificador")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("InstaladorId")
                        .HasColumnType("int");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.HasIndex("InstaladorId");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("APP_API.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int?>("LinhaId")
                        .HasColumnType("int");

                    b.Property<string>("LinkImg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LinkPdfManual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PrecoCliente")
                        .HasColumnType("double");

                    b.Property<double>("PrecoParceiro")
                        .HasColumnType("double");

                    b.Property<int>("QuantEstoque")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoriaId");

                    b.HasIndex("LinhaId");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("APP_API.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("APP_API.Models.DetalheOrcamento", b =>
                {
                    b.HasOne("APP_API.Models.Orcamento", "Orcamento")
                        .WithMany("DetalhesOrcamentos")
                        .HasForeignKey("OrcamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_API.Models.Produto", "Produto")
                        .WithMany("DetalheOrcamentos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Orcamento");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("APP_API.Models.DetalhePedido", b =>
                {
                    b.HasOne("APP_API.Models.Pedido", "Pedido")
                        .WithMany("DetalhePedidos")
                        .HasForeignKey("PedidoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_API.Models.Produto", "Produto")
                        .WithMany("DetalhePedidos")
                        .HasForeignKey("ProdutoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pedido");

                    b.Navigation("Produto");
                });

            modelBuilder.Entity("APP_API.Models.Endereco", b =>
                {
                    b.HasOne("APP_API.Models.Usuario", "Usuario")
                        .WithMany("Enderecos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("APP_API.Models.Linha", b =>
                {
                    b.HasOne("APP_API.Models.Categoria", "Categoria")
                        .WithMany("Linhas")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("APP_API.Models.Orcamento", b =>
                {
                    b.HasOne("APP_API.Models.Usuario", "Instalador")
                        .WithMany("Orcamentos")
                        .HasForeignKey("InstaladorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instalador");
                });

            modelBuilder.Entity("APP_API.Models.Pedido", b =>
                {
                    b.HasOne("APP_API.Models.Usuario", "Instalador")
                        .WithMany("Pedidos")
                        .HasForeignKey("InstaladorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instalador");
                });

            modelBuilder.Entity("APP_API.Models.Produto", b =>
                {
                    b.HasOne("APP_API.Models.Categoria", "Categoria")
                        .WithMany("Produtos")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_API.Models.Linha", "Linha")
                        .WithMany("Produtos")
                        .HasForeignKey("LinhaId");

                    b.Navigation("Categoria");

                    b.Navigation("Linha");
                });

            modelBuilder.Entity("APP_API.Models.Categoria", b =>
                {
                    b.Navigation("Linhas");

                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("APP_API.Models.Linha", b =>
                {
                    b.Navigation("Produtos");
                });

            modelBuilder.Entity("APP_API.Models.Orcamento", b =>
                {
                    b.Navigation("DetalhesOrcamentos");
                });

            modelBuilder.Entity("APP_API.Models.Pedido", b =>
                {
                    b.Navigation("DetalhePedidos");
                });

            modelBuilder.Entity("APP_API.Models.Produto", b =>
                {
                    b.Navigation("DetalheOrcamentos");

                    b.Navigation("DetalhePedidos");
                });

            modelBuilder.Entity("APP_API.Models.Usuario", b =>
                {
                    b.Navigation("Enderecos");

                    b.Navigation("Orcamentos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
