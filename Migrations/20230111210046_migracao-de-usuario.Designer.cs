// <auto-generated />
using System;
using APP_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APPAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20230111210046_migracao-de-usuario")]
    partial class migracaodeusuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("APP_API.Models.Endereco", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("Apartamento")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Bloco")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Numero")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("APP_API.Models.Orcamento", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescricaoServico")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("InstaladorEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NomeCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PrecoFinal")
                        .HasColumnType("double");

                    b.Property<double>("PrecoServico")
                        .HasColumnType("double");

                    b.HasKey("Identificador");

                    b.HasIndex("InstaladorEmail");

                    b.ToTable("Orcamentos");
                });

            modelBuilder.Entity("APP_API.Models.Pedido", b =>
                {
                    b.Property<string>("Identificador")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EntregaOpcao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("FormaDePagamento")
                        .HasColumnType("int");

                    b.Property<string>("InstaladorEmail")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<double>("Preco")
                        .HasColumnType("double");

                    b.HasKey("Identificador");

                    b.HasIndex("InstaladorEmail");

                    b.ToTable("Pedidos");
                });

            modelBuilder.Entity("APP_API.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Categoria")
                        .HasColumnType("int");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LinkImg")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LinkPdfManual")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<double>("PrecoCliente")
                        .HasColumnType("double");

                    b.Property<double>("PrecoParceiro")
                        .HasColumnType("double");

                    b.HasKey("Id");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("APP_API.Models.Usuario", b =>
                {
                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Cpf")
                        .HasColumnType("longtext");

                    b.Property<Guid>("EnderecoId")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("Id")
                        .HasColumnType("char(36)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("Telefone")
                        .HasColumnType("int");

                    b.HasKey("Email");

                    b.HasIndex("EnderecoId")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("OrcamentoProduto", b =>
                {
                    b.Property<string>("OrcamentosIdentificador")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ProdutosId")
                        .HasColumnType("int");

                    b.HasKey("OrcamentosIdentificador", "ProdutosId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("OrcamentoProdutos", (string)null);
                });

            modelBuilder.Entity("PedidoProduto", b =>
                {
                    b.Property<string>("PedidosIdentificador")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("ProdutosId")
                        .HasColumnType("int");

                    b.HasKey("PedidosIdentificador", "ProdutosId");

                    b.HasIndex("ProdutosId");

                    b.ToTable("PedidoProdutos", (string)null);
                });

            modelBuilder.Entity("APP_API.Models.Orcamento", b =>
                {
                    b.HasOne("APP_API.Models.Usuario", "Instalador")
                        .WithMany("Orcamentos")
                        .HasForeignKey("InstaladorEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instalador");
                });

            modelBuilder.Entity("APP_API.Models.Pedido", b =>
                {
                    b.HasOne("APP_API.Models.Usuario", "Instalador")
                        .WithMany("Pedidos")
                        .HasForeignKey("InstaladorEmail")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Instalador");
                });

            modelBuilder.Entity("APP_API.Models.Usuario", b =>
                {
                    b.HasOne("APP_API.Models.Endereco", "Endereco")
                        .WithOne("Usuario")
                        .HasForeignKey("APP_API.Models.Usuario", "EnderecoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endereco");
                });

            modelBuilder.Entity("OrcamentoProduto", b =>
                {
                    b.HasOne("APP_API.Models.Orcamento", null)
                        .WithMany()
                        .HasForeignKey("OrcamentosIdentificador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_API.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PedidoProduto", b =>
                {
                    b.HasOne("APP_API.Models.Pedido", null)
                        .WithMany()
                        .HasForeignKey("PedidosIdentificador")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APP_API.Models.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APP_API.Models.Endereco", b =>
                {
                    b.Navigation("Usuario")
                        .IsRequired();
                });

            modelBuilder.Entity("APP_API.Models.Usuario", b =>
                {
                    b.Navigation("Orcamentos");

                    b.Navigation("Pedidos");
                });
#pragma warning restore 612, 618
        }
    }
}
